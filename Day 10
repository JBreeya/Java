THREAD
- Any executable problem
- It is the smallest unit of dispatchable port
- a specialized form of multitasking

1. class threaddemo
{
  public static void main (string args[])
  {
    Thread t = Thread.CurrentThread(); 
    System.out.println("Current Thread" +t);
    t.setName ("My Thread");
    System.out.println ("After Name Change "+t);
    try
    {
      for (int i = 5; i! = -1; i--)
      {
        Thread.sleep(1000);
      }
    }
    catch(InterruptedException ie)
    {
      System.out.println("Exception Caught" +ie);
    }
  }
}

2. class newthread implements Runnable
{
  Thread t;
  newthread()
  {
    t = new Thread (this, "demo thread");
    System.out.println("Child Thread" +t);
    t.start();
  }
  public void main()
  {
    try
    {
      for (int i = 5; i! = -1; i--)
      {
        System.out.println("Child Thread" +t);
        Thread.sleep(1000);
      }
    }
    catch(InterruptedException ie)
    {
      System.out.println("Child Thread Interrupted");
    }
    System.out.println("Exiting Child Thread");
  }
}
